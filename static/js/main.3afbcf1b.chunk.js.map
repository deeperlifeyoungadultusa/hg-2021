{"version":3,"sources":["redux/actions/types.js","firebase.js","redux/actions/index.js","Components/Chat/ChatBar/ChatBar.js","Components/Chat/Modal/Modal.js","Components/Chat/ChatMessage/ChatMessage.js","Components/Chat/ChatShell/ChatShell.js","Components/Chat/Header/Header.js","Components/Chat/Chat.js","redux/reducers/index.js","redux/store/store.js","Components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ADD_MESSAGE","GET_MESSAGES","DELETE_MESSAGE","LOGIN","LOGIN_ERROR","VERIFY_LOGIN","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","GoogleAuthProvider","database","messages","ref","verifyLogin","dispatch","onAuthStateChanged","user","type","payload","signOut","then","SIGN_OUT","ChatBar","props","onChange","e","setState","text","target","value","onClick","state","trim","post","admin","addMessage","className","this","Component","connect","message","push","Modal","render","children","ChatMessage","delete","id","deleteMessage","handleModal","modalOpen","showModal","modalInfo","child","remove","catch","console","log","ChatShell","componentDidMount","a","getMessages","scrollToBottom","animateScroll","containerId","map","key","on","snapshot","val","array","Object","keys","forEach","i","Header","login","Chat","authenticated","history","componentDidUpdate","initialState","initialLoginState","error","combineReducers","assign","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Login","name","onSubmit","preventDefault","email","password","htmlFor","placeholder","signInWithEmailAndPassword","err","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3afbcf1b.chunk.js","sourcesContent":["module.exports = {\n  ADD_MESSAGE: \"ADD_MESSAGE\",\n  GET_MESSAGES: \"GET_MESSAGES\",\n  DELETE_MESSAGE: \"DELETE_MESSAGE\",\n  LOGIN: \"LOGIN\",\n  LOGIN_ERROR: \"LOGIN_ERROR\",\n  VERIFY_LOGIN: \"VERIFY_LOGIN\",\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA9XNc30h-czoeu9UfnXZHGD4i8PCsfjfc\",\n  authDomain: \"dlbc-ya-conference-app.firebaseapp.com\",\n  databaseURL: \"https://dlbc-ya-conference-app.firebaseio.com\",\n  projectId: \"dlbc-ya-conference-app\",\n  storageBucket: \"dlbc-ya-conference-app.appspot.com\",\n  messagingSenderId: \"341667552255\",\n  appId: \"1:341667552255:web:16c8c22701a5c1cb50a5ca\",\n};\n// Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport const database = firebase.database();\nexport const refLocation = \"Chat/Q&A\";\nexport const messages = database.ref(refLocation);\nexport default firebase;\n","import firebase, { database, messages, refLocation } from \"../../firebase\";\nimport {\n  LOGIN,\n  VERIFY_LOGIN,\n  SIGN_OUT,\n  LOGIN_ERROR,\n  GET_MESSAGES,\n} from \"./types\";\n\nexport const login = (email, password) => (dispatch) => {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then((user) => {\n      dispatch({\n        type: LOGIN,\n        payload: user,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: err,\n      });\n    });\n};\n\nexport const verifyLogin = () => (dispatch) => {\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      dispatch({\n        type: VERIFY_LOGIN,\n        payload: user,\n      });\n    } else {\n      signOut();\n    }\n  });\n};\n\nexport const signOut = () => (dispatch) => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() =>\n      dispatch({\n        type: SIGN_OUT,\n        payload: \"\",\n      })\n    );\n};\n\nexport const getMessages = () => (dispatch) => {\n  messages.on(\"value\", (snapshot) => {\n    dispatch({\n      type: GET_MESSAGES,\n      payload: () => {\n        const val = snapshot.val();\n        const array = [];\n\n        if (val) {\n          Object.keys(val).forEach((key, i) => {\n            array.push({ [key]: val[key] });\n            array[i].id = key;\n          });\n        }\n        return array;\n      },\n    });\n  });\n};\n\nexport const deleteMessage = (id) => (dispatch) => {\n  const userRef = database.ref(refLocation).child(id);\n  userRef\n    .remove()\n    .then()\n    .catch((e) => console.log(e));\n};\n\nexport const addMessage = (message) => (dispatch) => messages.push(message);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMessage } from \"../../../redux/actions/index\";\nimport \"./chatBar.css\";\n\nclass ChatBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n    };\n  }\n\n  onChange = (e) => {\n    this.setState({\n      text: e.target.value,\n    });\n  };\n\n  onClick = () => {\n    if (this.state.text.trim() !== \"\") {\n      const post = {\n        admin: true,\n        text: this.state.text,\n      };\n\n      this.setState({ text: \"\" });\n      this.props.addMessage(post);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"chatbar\">\n        <input\n          type=\"text\"\n          className=\"text\"\n          value={this.state.text}\n          onChange={(e) => this.onChange(e)}\n        />\n        <input\n          type=\"submit\"\n          className=\"submit\"\n          value=\"Enter\"\n          onClick={(e) => this.onClick()}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, { addMessage })(ChatBar);\n","import React, { Component } from \"react\";\nimport \"./modal.css\";\n\nclass Modal extends Component {\n  render = () => {\n    return <div className=\"modal\">{this.props.children}</div>;\n  };\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteMessage } from \"../../../redux/actions\";\nimport Modal from \"../Modal/Modal\";\nimport \"./chatMessage.css\";\n\nclass ChatMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalOpen: false,\n    };\n  }\n\n  delete = () => {\n    const { id, deleteMessage } = this.props;\n    deleteMessage(id);\n  };\n\n  handleModal = (state) => {\n    this.setState({ modalOpen: state });\n  };\n\n  showModal = () => {\n    const { modalOpen } = this.state;\n\n    const modalInfo = (\n      <>\n        <h1>Are you sure you want to delete</h1>\n        <div className=\"modalContainer\">\n          <button onClick={this.delete}>Yes</button>\n          <button\n            onClick={(e) => {\n              this.handleModal(false);\n            }}\n          >\n            No\n          </button>\n        </div>\n      </>\n    );\n\n    const modal = modalOpen ? <Modal>{modalInfo}</Modal> : \"\";\n\n    return modal;\n  };\n\n  render() {\n    const { message } = this.props;\n    return (\n      <div className=\"message\">\n        {this.showModal()}\n\n        <div className=\"messageText\" onClick={(e) => this.handleModal(true)}>\n          {message.text}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, { deleteMessage })(ChatMessage);\n","import React, { Component } from \"react\";\nimport ChatMessage from \"../ChatMessage/ChatMessage\";\nimport { connect } from \"react-redux\";\nimport { animateScroll } from \"react-scroll\";\nimport { getMessages } from \"../../../redux/actions/index\";\nimport \"./chatShell.css\";\n\nclass ChatShell extends Component {\n  componentDidMount = async () => {\n    await this.props.getMessages();\n    this.scrollToBottom();\n  };\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom = () => {\n    animateScroll.scrollToBottom({\n      containerId: \"chat-messages\",\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"chat-messages\" id=\"chat-messages\">\n        {this.props.messages.messages.map((message) => (\n          <ChatMessage\n            key={message.id}\n            id={message.id}\n            message={message[message.id]}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  messages: state.messages,\n});\n\nexport default connect(mapStateToProps, { getMessages })(ChatShell);\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport './header.css'\nimport {signOut, verifyLogin} from '../../../redux/actions/index'\n\nclass Header extends Component {\n\n    onClick = e => {\n         this.props.signOut();\n    }\n\n    render = () => {\n        return (\n            <div className=\"title\">\n                <p className=\"chat\">DLYA Admin Chat</p>\n                <div className=\"logout\" onClick={e => this.onClick(e)}>Logout</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.login\n});\n\nexport default connect(\n    mapStateToProps,\n    {signOut, verifyLogin}\n)(Header)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { verifyLogin } from \"../../redux/actions/index\";\nimport ChatBar from \"./ChatBar/ChatBar\";\nimport ChatShell from \"./ChatShell/ChatShell\";\nimport Header from \"./Header/Header\";\n\nclass Chat extends Component {\n  componentDidMount = async () => {\n    await this.props.verifyLogin();\n\n    const { authenticated } = this.props.auth;\n\n    if (!authenticated) {\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentDidUpdate = () => {\n    const { authenticated } = this.props.auth;\n\n    if (!authenticated) {\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header className=\"header\" />\n        <ChatShell />\n        <ChatBar />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.login,\n});\n\nexport default connect(mapStateToProps, { verifyLogin })(Chat);\n","import {combineReducers} from 'redux'\n\nimport {GET_MESSAGES, SIGN_OUT, VERIFY_LOGIN, LOGIN, LOGIN_ERROR}from '../actions/types'\n\nconst initialState = {\n    messages: []\n}\n\nconst initialLoginState = {\n    authenticated: false,\n    user: {},\n    error: ''\n}\n\nconst loginReducer = (state = Object.assign({}, initialLoginState), action) => {\n    switch(action.type) {\n        case LOGIN:\n            return {\n                ...state,\n                authenticated: !!action.payload,\n                user: action.payload\n            }\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case VERIFY_LOGIN:\n            return {\n                ...state,\n                authenticated: !!action.payload,\n                user: action.payload\n            }\n        case SIGN_OUT:\n            return {\n                ...state,\n                authenticated: !!action.payload,\n                user: {}\n            }\n\n        default:\n            return state\n    }\n}\n\nconst messageReducer = (state = Object.assign({}, initialState), action) => {\n    switch(action.type) {\n        case GET_MESSAGES:\n            return {\n                ...state,\n                messages: action.payload()\n            }\n\n        default: \n            return state;\n    }\n}\n\nexport default combineReducers({\n    messages: messageReducer,\n    login: loginReducer\n})","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, verifyLogin } from \"../../redux/actions/index\";\nimport \"./login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.props.verifyLogin();\n\n    const { authenticated } = this.props.auth;\n\n    if (authenticated) {\n      this.props.history.push(\"/\");\n    }\n  };\n\n  componentDidUpdate = () => {\n    const { authenticated } = this.props.auth;\n\n    if (authenticated) {\n      this.props.history.push(\"/\");\n    }\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({\n      email: \"\",\n      password: \"\",\n    });\n\n    await this.props.login(this.state.email, this.state.password);\n  };\n\n  render() {\n    const { error } = this.props.auth;\n    return (\n      <div className=\"container\">\n        <h1>Login</h1>\n        <p>Login to access your account</p>\n        <p>{error.message}</p>\n        <form className=\"form\" onSubmit={(e) => this.onSubmit(e)}>\n          <label htmlFor=\"email\">Email Address</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"email\"\n            value={this.state.email}\n            onChange={(e) => this.onChange(e)}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            value={this.state.password}\n            onChange={(e) => this.onChange(e)}\n          />\n          <input className=\"submit\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.login,\n});\n\nexport default connect(mapStateToProps, { login, verifyLogin })(Login);\n","import React from \"react\";\nimport \"./App.css\";\nimport Chat from \"./Components/Chat/Chat\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Login from \"./Components/Login/Login\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"app\">\n          <Route exact path=\"/\" component={Chat} />\n          <Route exact path=\"/login\" component={Login} />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}