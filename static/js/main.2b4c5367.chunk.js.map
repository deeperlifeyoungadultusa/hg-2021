{"version":3,"sources":["firebase.js","redux/actions/index.js","Components/Chat/ChatBar/ChatBar.js","Components/Chat/Modal/Modal.js","Components/Chat/ChatMessage/ChatMessage.js","Components/Chat/ChatShell/ChatShell.js","Components/Chat/Header/Header.js","Components/Chat/Chat.js","redux/reducers/index.js","redux/store/store.js","Components/Login/Login.js","App.js","serviceWorker.js","index.js","redux/actions/types.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","GoogleAuthProvider","database","messages","ref","verifyLogin","dispatch","onAuthStateChanged","user","type","VERIFY_LOGIN","payload","signOut","then","SIGN_OUT","ChatBar","props","onChange","e","setState","text","target","value","onClick","state","trim","post","admin","addMessage","className","this","Component","connect","message","push","Modal","render","children","ChatMessage","delete","id","deleteMessage","handleModal","modalOpen","showModal","modalInfo","child","remove","catch","console","log","ChatShell","componentDidMount","a","getMessages","scrollToBottom","animateScroll","containerId","filterMessages","speaker","filter","startsWith","map","key","on","snapshot","GET_MESSAGES","val","array","Object","keys","forEach","i","Header","speakerSelect","selectSpeaker","htmlFor","name","defaultChecked","login","SELECT_SPEAKER","Chat","authenticated","history","componentDidUpdate","initialState","initialLoginState","error","initialSpeakerState","combineReducers","assign","action","LOGIN","LOGIN_ERROR","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Login","onSubmit","preventDefault","email","password","placeholder","signInWithEmailAndPassword","err","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","ADD_MESSAGE","DELETE_MESSAGE"],"mappings":"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","file":"static/js/main.2b4c5367.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA9XNc30h-czoeu9UfnXZHGD4i8PCsfjfc\",\n  authDomain: \"dlbc-ya-conference-app.firebaseapp.com\",\n  databaseURL: \"https://dlbc-ya-conference-app.firebaseio.com\",\n  projectId: \"dlbc-ya-conference-app\",\n  storageBucket: \"dlbc-ya-conference-app.appspot.com\",\n  messagingSenderId: \"341667552255\",\n  appId: \"1:341667552255:web:16c8c22701a5c1cb50a5ca\",\n};\n// Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport const database = firebase.database();\nexport const refLocation = \"Chat/Q&A\";\nexport const messages = database.ref(refLocation);\nexport default firebase;\n","import firebase, { database, messages, refLocation } from \"../../firebase\";\nimport {\n  LOGIN,\n  VERIFY_LOGIN,\n  SIGN_OUT,\n  LOGIN_ERROR,\n  GET_MESSAGES,\n  SELECT_SPEAKER,\n} from \"./types\";\n\nexport const login = (email, password) => (dispatch) => {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then((user) => {\n      dispatch({\n        type: LOGIN,\n        payload: user,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: err,\n      });\n    });\n};\n\nexport const verifyLogin = () => (dispatch) => {\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      dispatch({\n        type: VERIFY_LOGIN,\n        payload: user,\n      });\n    } else {\n      signOut();\n    }\n  });\n};\n\nexport const signOut = () => (dispatch) => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() =>\n      dispatch({\n        type: SIGN_OUT,\n        payload: \"\",\n      })\n    );\n};\n\nexport const getMessages = () => (dispatch) => {\n  messages.on(\"value\", (snapshot) => {\n    dispatch({\n      type: GET_MESSAGES,\n      payload: () => {\n        const val = snapshot.val();\n        const array = [];\n\n        if (val) {\n          Object.keys(val).forEach((key, i) => {\n            array.push({ [key]: val[key] });\n            array[i].id = key;\n          });\n        }\n        return array;\n      },\n    });\n  });\n};\n\nexport const deleteMessage = (id) => (dispatch) => {\n  const userRef = database.ref(refLocation).child(id);\n  userRef\n    .remove()\n    .then()\n    .catch((e) => console.log(e));\n};\n\nexport const addMessage = (message) => (dispatch) => messages.push(message);\n\nexport const selectSpeaker = (speaker) => (dispatch) => {\n  dispatch({\n    type: SELECT_SPEAKER,\n    payload: speaker,\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMessage } from \"../../../redux/actions/index\";\nimport \"./chatBar.css\";\n\nclass ChatBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n    };\n  }\n\n  onChange = (e) => {\n    this.setState({\n      text: e.target.value,\n    });\n  };\n\n  onClick = () => {\n    if (this.state.text.trim() !== \"\") {\n      const post = {\n        admin: true,\n        text: this.state.text,\n      };\n\n      this.setState({ text: \"\" });\n      this.props.addMessage(post);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"chatbar\">\n        <input\n          type=\"text\"\n          className=\"text\"\n          value={this.state.text}\n          onChange={(e) => this.onChange(e)}\n        />\n        <input\n          type=\"submit\"\n          className=\"submit\"\n          value=\"Enter\"\n          onClick={(e) => this.onClick()}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, { addMessage })(ChatBar);\n","import React, { Component } from \"react\";\nimport \"./modal.css\";\n\nclass Modal extends Component {\n  render = () => {\n    return <div className=\"modal\">{this.props.children}</div>;\n  };\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteMessage } from \"../../../redux/actions\";\nimport Modal from \"../Modal/Modal\";\nimport \"./chatMessage.css\";\n\nclass ChatMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalOpen: false,\n    };\n  }\n\n  delete = () => {\n    const { id, deleteMessage } = this.props;\n    deleteMessage(id);\n  };\n\n  handleModal = (state) => {\n    this.setState({ modalOpen: state });\n  };\n\n  showModal = () => {\n    const { modalOpen } = this.state;\n\n    const modalInfo = (\n      <>\n        <h1>Are you sure you want to delete</h1>\n        <div className=\"modalContainer\">\n          <button onClick={this.delete}>Yes</button>\n          <button\n            onClick={(e) => {\n              this.handleModal(false);\n            }}\n          >\n            No\n          </button>\n        </div>\n      </>\n    );\n\n    const modal = modalOpen ? <Modal>{modalInfo}</Modal> : \"\";\n\n    return modal;\n  };\n\n  render() {\n    const { message } = this.props;\n    return (\n      <div className={\"message\" + (!message.admin ? \"-user\" : \"\")}>\n        {this.showModal()}\n\n        <div className=\"messageText\" onClick={(e) => this.handleModal(true)}>\n          {message.admin ? <p className=\"admin\">Admin</p> : null}\n          {message.text}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, { deleteMessage })(ChatMessage);\n","import React, { Component } from \"react\";\nimport ChatMessage from \"../ChatMessage/ChatMessage\";\nimport { connect } from \"react-redux\";\nimport { animateScroll } from \"react-scroll\";\nimport { getMessages } from \"../../../redux/actions/index\";\nimport \"./chatShell.css\";\n\nclass ChatShell extends Component {\n  componentDidMount = async () => {\n    await this.props.getMessages();\n    this.scrollToBottom();\n  };\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom = () => {\n    animateScroll.scrollToBottom({\n      containerId: \"chat-messages\",\n    });\n  };\n\n  filterMessages = () => {\n    const { speaker } = this.props.speaker;\n    const { messages } = this.props.messages;\n\n    const aduFilter = \"#1\";\n    const ajayiFilter = \"#2\";\n    const ayanfeFilter = \"#3\";\n    const omotesoFilter = \"#4\";\n\n    switch (speaker) {\n      case \"Adu\": {\n        return messages.filter((message) =>\n          message[message.id].text.trim().startsWith(aduFilter)\n        );\n      }\n      case \"Ajayi\": {\n        return messages.filter((message) =>\n          message[message.id].text.trim().startsWith(ajayiFilter)\n        );\n      }\n      case \"Ayanfe\": {\n        return messages.filter((message) =>\n          message[message.id].text.trim().startsWith(ayanfeFilter)\n        );\n      }\n      case \"Omoteso\": {\n        return messages.filter((message) =>\n          message[message.id].text.trim().startsWith(omotesoFilter)\n        );\n      }\n      default:\n        return messages;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"chat-messages\" id=\"chat-messages\">\n        {this.filterMessages().map((message) => (\n          <ChatMessage\n            key={message.id}\n            id={message.id}\n            message={message[message.id]}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  messages: state.messages,\n  speaker: state.speaker,\n});\n\nexport default connect(mapStateToProps, { getMessages })(ChatShell);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./header.css\";\nimport {\n  signOut,\n  verifyLogin,\n  selectSpeaker,\n} from \"../../../redux/actions/index\";\n\nclass Header extends Component {\n  onClick = (e) => {\n    this.props.signOut();\n  };\n\n  speakerSelect = (e) => {\n    this.props.selectSpeaker(e.target.value);\n  };\n\n  render = () => {\n    return (\n      <div className=\"title\">\n        <p className=\"chat\">DLYA Admin Chat</p>\n        <div className=\"logout\" onClick={(e) => this.onClick(e)}>\n          Logout\n        </div>\n\n        <div>\n          <label htmlFor=\"selectBreakout\" className=\"selectBreakout\">\n            Please select the message to filter by\n          </label>\n          <select\n            name=\"selectBreakout\"\n            id=\"selectBreakout\"\n            onChange={this.speakerSelect}\n          >\n            <option value=\"all\" defaultChecked>\n              All\n            </option>\n            <option value=\"Adu\">\n              Cultivating the Vision for Financial Freedom\n            </option>\n            <option value=\"Ajayi\">\n              The vision for Skill & Professional Development\n            </option>\n            <option value=\"Ayanfe\">\n              Purposeful Vision of a Cristian Single\n            </option>\n            <option value=\"Omoteso\">\n              Pursuing a Comprehensive Vision in the Family\n            </option>\n          </select>\n        </div>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.login,\n  speaker: state.speaker,\n});\n\nexport default connect(mapStateToProps, {\n  signOut,\n  verifyLogin,\n  selectSpeaker,\n})(Header);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { verifyLogin } from \"../../redux/actions/index\";\nimport ChatBar from \"./ChatBar/ChatBar\";\nimport ChatShell from \"./ChatShell/ChatShell\";\nimport Header from \"./Header/Header\";\n\nclass Chat extends Component {\n  componentDidMount = async () => {\n    await this.props.verifyLogin();\n\n    const { authenticated } = this.props.auth;\n\n    if (!authenticated) {\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentDidUpdate = () => {\n    // await this.props.verifyLogin();\n    const { authenticated } = this.props.auth;\n\n    if (!authenticated) {\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header className=\"header\" />\n        <ChatShell />\n        <ChatBar />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.login,\n});\n\nexport default connect(mapStateToProps, { verifyLogin })(Chat);\n","import { combineReducers } from \"redux\";\n\nimport {\n  GET_MESSAGES,\n  SIGN_OUT,\n  VERIFY_LOGIN,\n  LOGIN,\n  LOGIN_ERROR,\n  SELECT_SPEAKER,\n} from \"../actions/types\";\n\nconst initialState = {\n  messages: [],\n};\n\nconst initialLoginState = {\n  authenticated: false,\n  user: {},\n  error: \"\",\n};\n\nconst initialSpeakerState = {\n  speaker: \"all\",\n};\n\nconst loginReducer = (state = Object.assign({}, initialLoginState), action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        authenticated: !!action.payload,\n        user: action.payload,\n      };\n    case LOGIN_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case VERIFY_LOGIN:\n      return {\n        ...state,\n        authenticated: !!action.payload,\n        user: action.payload,\n      };\n    case SIGN_OUT:\n      return {\n        ...state,\n        authenticated: !!action.payload,\n        user: {},\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst messageReducer = (state = Object.assign({}, initialState), action) => {\n  switch (action.type) {\n    case GET_MESSAGES:\n      return {\n        ...state,\n        messages: action.payload(),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst speakerReducer = (\n  state = Object.assign({}, initialSpeakerState),\n  action\n) => {\n  switch (action.type) {\n    case SELECT_SPEAKER:\n      return {\n        ...state,\n        speaker: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  messages: messageReducer,\n  login: loginReducer,\n  speaker: speakerReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, verifyLogin } from \"../../redux/actions/index\";\nimport \"./login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.props.verifyLogin();\n\n    const { authenticated } = this.props.auth;\n\n    if (authenticated) {\n      this.props.history.push(\"/\");\n    }\n  };\n\n  componentDidUpdate = () => {\n    const { authenticated } = this.props.auth;\n\n    if (authenticated) {\n      this.props.history.push(\"/\");\n    }\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({\n      email: \"\",\n      password: \"\",\n    });\n\n    await this.props.login(this.state.email, this.state.password);\n  };\n\n  render() {\n    const { error } = this.props.auth;\n    return (\n      <div className=\"container\">\n        <h1>Login</h1>\n        <p>Login to access your account</p>\n        <p>{error.message}</p>\n        <form className=\"form\" onSubmit={(e) => this.onSubmit(e)}>\n          <label htmlFor=\"email\">Email Address</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"email\"\n            value={this.state.email}\n            onChange={(e) => this.onChange(e)}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            value={this.state.password}\n            onChange={(e) => this.onChange(e)}\n          />\n          <input className=\"submit\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.login,\n});\n\nexport default connect(mapStateToProps, { login, verifyLogin })(Login);\n","import React from \"react\";\nimport \"./App.css\";\nimport Chat from \"./Components/Chat/Chat\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\nimport { Route, HashRouter as Router } from \"react-router-dom\";\nimport Login from \"./Components/Login/Login\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"app\">\n          <Route exact path=\"/\" component={Chat} />\n          <Route exact path=\"/login\" component={Login} />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  ADD_MESSAGE: \"ADD_MESSAGE\",\n  GET_MESSAGES: \"GET_MESSAGES\",\n  DELETE_MESSAGE: \"DELETE_MESSAGE\",\n  LOGIN: \"LOGIN\",\n  LOGIN_ERROR: \"LOGIN_ERROR\",\n  VERIFY_LOGIN: \"VERIFY_LOGIN\",\n  SIGN_OUT: \"SIGN_OUT\",\n  SELECT_SPEAKER: \"SELECT_SPEAKER\",\n};\n"],"sourceRoot":""}